{"ast":null,"code":"import axios from \"axios\";\nimport { produce } from \"immer\";\nimport { createAction, handleActions } from \"redux-actions\";\nconst GET_MONDAY = \"GET_MONDAY\";\nconst GET_TUESDAY = \"GET_TUESDAY\";\nconst GET_WEDNESDAY = \"GET_WEDNESDAY\";\nconst GET_THURSDAY = \"GET_THURSDAY\";\nconst GET_FRIDAY = \"GET_FRIDAY\";\nconst GET_SATURDAY = \"GET_SATURDAY\";\nconst GET_SUNDAY = \"GET_SUNDAY\";\nconst EDIT_MONDAYCHECK = \"EDIT_MONDAYCHECK\";\nconst POST_MONDAY = \"POST_MONDAY\";\nconst GET_MODAL = \"GET_MODAL\";\nconst getMonday = createAction(GET_MONDAY, monday => ({\n  monday\n}));\nconst editMondayCheck = createAction(EDIT_MONDAYCHECK, (monday, postId) => ({\n  monday,\n  postId\n}));\nconst postMonday = createAction(POST_MONDAY, monday => ({\n  monday\n}));\nconst getModal = createAction(GET_MODAL, modal => ({\n  modal\n}));\nconst initialState = {\n  monday: [],\n  day: [],\n  modal: \"\"\n};\n\nconst postDayMD = (day, title) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    axios({\n      method: 'POST',\n      url: `http://localhost:4000/${day}`,\n      data: {\n        title,\n        check: 0\n      }\n    }).then(res => {\n      console.log(day, title);\n\n      if (day == \"Monday\") {\n        dispatch(getMondayMD(day));\n      }\n\n      getModal(false);\n    }).catch(err => {});\n  };\n};\n\nconst getMondayMD = day => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    console.log(day);\n    axios({\n      method: 'GET',\n      url: `http://localhost:4000/${day}`,\n      data: {}\n    }).then(res => {\n      const dateList = res.data;\n      console.log(dateList);\n      if (day == \"\") dispatch(getMonday(dateList));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst editMondayCheckMD = (postId, check) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    axios({\n      method: 'PATCH',\n      url: `http://localhost:4000/Monday/${postId}`,\n      data: {\n        check: check\n      }\n    }).then(res => {\n      dispatch(editMondayCheck(check, postId));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nexport default handleActions({\n  [GET_MONDAY]: (state, action) => produce(state, draft => {\n    draft.monday = action.payload.monday;\n  }),\n  [EDIT_MONDAYCHECK]: (state, action) => produce(state, draft => {\n    let postIdx = draft.monday.findIndex(list => list.id == action.payload.postId); // console.log(commentIdx)\n\n    draft.monday[postIdx].check = action.payload.monday;\n  }),\n  [POST_MONDAY]: (state, action) => produce(state, draft => {\n    draft.monday.push(action.payload.monday);\n  }),\n  [GET_MODAL]: (state, action) => produce(state, draft => {\n    draft.modal = action.payload.modal;\n  })\n}, initialState);\nexport const actionCreators = {\n  getMondayMD,\n  editMondayCheckMD,\n  postDayMD,\n  getModal\n};","map":{"version":3,"sources":["/Users/eternalclash/Desktop/무제 폴더/todo/src/redux/module/date.js"],"names":["axios","produce","createAction","handleActions","GET_MONDAY","GET_TUESDAY","GET_WEDNESDAY","GET_THURSDAY","GET_FRIDAY","GET_SATURDAY","GET_SUNDAY","EDIT_MONDAYCHECK","POST_MONDAY","GET_MODAL","getMonday","monday","editMondayCheck","postId","postMonday","getModal","modal","initialState","day","postDayMD","title","dispatch","getState","history","method","url","data","check","then","res","console","log","getMondayMD","catch","err","dateList","editMondayCheckMD","state","action","draft","payload","postIdx","findIndex","list","id","push","actionCreators"],"mappings":"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","sourcesContent":["\nimport axios from \"axios\";\nimport { produce } from \"immer\";\nimport { createAction, handleActions } from \"redux-actions\";\nconst GET_MONDAY = \"GET_MONDAY\";\nconst GET_TUESDAY = \"GET_TUESDAY\";\nconst GET_WEDNESDAY = \"GET_WEDNESDAY\";\nconst GET_THURSDAY = \"GET_THURSDAY\";\nconst GET_FRIDAY = \"GET_FRIDAY\";\nconst GET_SATURDAY = \"GET_SATURDAY\";\nconst GET_SUNDAY = \"GET_SUNDAY\";\nconst EDIT_MONDAYCHECK=\"EDIT_MONDAYCHECK\"\nconst POST_MONDAY = \"POST_MONDAY\"\nconst GET_MODAL = \"GET_MODAL\"\nconst getMonday = createAction(GET_MONDAY, (monday)=>({monday}))\nconst editMondayCheck = createAction(EDIT_MONDAYCHECK,(monday,postId)=>({monday,postId}))\nconst postMonday = createAction(POST_MONDAY, (monday)=>({monday}))\nconst getModal = createAction(GET_MODAL,(modal)=>({modal}))\nconst initialState = {\n    monday: [],\n     day: [],\n     modal:\"\",\n}\n\n\nconst postDayMD = (day,title) =>{\n    return (function (dispatch,getState, {history})\n    {\n        axios({\n            method:'POST',\n            url:`http://localhost:4000/${day}`,\n            data:{\n                title,\n                check:0,\n            }\n        })\n        .then((res)=>{\n            console.log(day,title)\n            \n          if(day==\"Monday\")\n          {   \n              dispatch(getMondayMD(day))\n          }\n          getModal(false)\n        })\n        .catch((err)=>{\n\n        })\n    }\n    )\n}\n\nconst getMondayMD = (day) => {\n    return (function (dispatch, getState, {history})\n    { console.log(day)\n        axios({\n            method:'GET',\n            url: `http://localhost:4000/${day}`,\n            data: {},\n           \n        })\n        .then((res)=>{\n            const dateList = res.data\n            console.log(dateList)\n            if(day==\"\")\n            dispatch(getMonday(dateList))\n           \n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n    )\n}\nconst editMondayCheckMD = (postId,check) => {\n    return (function (dispatch, getState, {history})\n    {\n        axios({\n            method:'PATCH',\n            url: `http://localhost:4000/Monday/${postId}`,\n            data: {\n                check:check,\n            },\n           \n        })\n        .then((res)=>{\n        dispatch(editMondayCheck(check,postId))\n           \n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n    )\n}\n\nexport default handleActions (\n    {\n        [GET_MONDAY] : (state,action) => \n            produce(state,(draft)=> {\n                draft.monday =action.payload.monday;\n            }),\n        [EDIT_MONDAYCHECK] : (state,action) => \n            produce(state,(draft)=> {\n                let postIdx = draft.monday.findIndex(\n                    (list) => list.id == action.payload.postId\n                  );\n                  // console.log(commentIdx)\n                  draft.monday[postIdx].check=action.payload.monday\n         }),\n         [POST_MONDAY] : (state,action) =>\n         produce(state,(draft)=> {\n             draft.monday.push(action.payload.monday)\n         }),\n         [GET_MODAL] : (state,action) => \n         produce(state, (draft)=> {\n             draft.modal = action.payload.modal\n         })\n        \n        }, initialState);\n\nexport const actionCreators = {\n    getMondayMD,\n    editMondayCheckMD,\n    postDayMD,\n    getModal,\n}"]},"metadata":{},"sourceType":"module"}
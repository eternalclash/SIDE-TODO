{"ast":null,"code":"import axios from \"axios\";\nimport { produce } from \"immer\";\nimport { createAction, handleActions } from \"redux-actions\";\nconst GET_MONDAY = \"GET_MONDAY\";\nconst EDIT_MONDAYCHECK = \"EDIT_MONDAYCHECK\";\nconst getMonday = createAction(GET_MONDAY, monday => ({\n  monday\n}));\nconst editMondayCheck = createAction(EDIT_MONDAYCHECK, mondayCheck => ({\n  mondayCheck\n}));\nconst initialState = {\n  monday: [],\n  mondayCheck: []\n};\n\nconst getMondayMD = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    axios({\n      method: 'GET',\n      url: \"http://localhost:4000/Monday\",\n      data: {}\n    }).then(res => {\n      const dateList = res.data;\n      console.log(dateList);\n      dispatch(getMonday(dateList));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst editMondayCheckMD = (postId, check) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    axios({\n      method: 'PUT',\n      url: `http://localhost:4000/Monday/${postId}`,\n      data: {\n        check\n      }\n    }).then(res => {\n      const dateList = res.data;\n      console.log(dateList);\n      dispatch(getMonday(dateList));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nexport default handleActions({\n  [GET_MONDAY]: (state, action) => produce(state, draft => {\n    draft.monday = action.payload.monday;\n  }),\n  [EDIT_MONDAYCHECK]: (state, action) => produce(state, draft => {\n    draft.monday = action.payload.monday;\n  })\n}, initialState);\nexport const actionCreators = {\n  getMondayMD,\n  editMondayCheckMD\n};","map":{"version":3,"sources":["/Users/eternalclash/Desktop/무제 폴더/todo/src/redux/module/date.js"],"names":["axios","produce","createAction","handleActions","GET_MONDAY","EDIT_MONDAYCHECK","getMonday","monday","editMondayCheck","mondayCheck","initialState","getMondayMD","dispatch","getState","history","method","url","data","then","res","dateList","console","log","catch","err","editMondayCheckMD","postId","check","state","action","draft","payload","actionCreators"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,gBAAgB,GAAC,kBAAvB;AAEA,MAAMC,SAAS,GAAGJ,YAAY,CAACE,UAAD,EAAcG,MAAD,KAAW;AAACA,EAAAA;AAAD,CAAX,CAAb,CAA9B;AACA,MAAMC,eAAe,GAAGN,YAAY,CAACG,gBAAD,EAAmBI,WAAD,KAAgB;AAACA,EAAAA;AAAD,CAAhB,CAAlB,CAApC;AAEA,MAAMC,YAAY,GAAG;AACjBH,EAAAA,MAAM,EAAE,EADS;AAEjBE,EAAAA,WAAW,EAAE;AAFI,CAArB;;AAKA,MAAME,WAAW,GAAG,MAAM;AACtB,SAAQ,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAACC,IAAAA;AAAD,GAA9B,EACR;AACId,IAAAA,KAAK,CAAC;AACFe,MAAAA,MAAM,EAAC,KADL;AAEFC,MAAAA,GAAG,EAAE,8BAFH;AAGFC,MAAAA,IAAI,EAAE;AAHJ,KAAD,CAAL,CAMCC,IAND,CAMOC,GAAD,IAAO;AACT,YAAMC,QAAQ,GAAGD,GAAG,CAACF,IAArB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAR,MAAAA,QAAQ,CAACN,SAAS,CAACc,QAAD,CAAV,CAAR;AAEH,KAXD,EAYCG,KAZD,CAYQC,GAAD,IAAS;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAdD;AAeH,GAjBD;AAmBH,CApBD;;AAqBA,MAAMC,iBAAiB,GAAG,CAACC,MAAD,EAAQC,KAAR,KAAkB;AACxC,SAAQ,UAAUf,QAAV,EAAoBC,QAApB,EAA8B;AAACC,IAAAA;AAAD,GAA9B,EACR;AACId,IAAAA,KAAK,CAAC;AACFe,MAAAA,MAAM,EAAC,KADL;AAEFC,MAAAA,GAAG,EAAG,gCAA+BU,MAAO,EAF1C;AAGFT,MAAAA,IAAI,EAAE;AACFU,QAAAA;AADE;AAHJ,KAAD,CAAL,CAQCT,IARD,CAQOC,GAAD,IAAO;AACT,YAAMC,QAAQ,GAAGD,GAAG,CAACF,IAArB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAR,MAAAA,QAAQ,CAACN,SAAS,CAACc,QAAD,CAAV,CAAR;AAEH,KAbD,EAcCG,KAdD,CAcQC,GAAD,IAAS;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAhBD;AAiBH,GAnBD;AAqBH,CAtBD;;AAwBA,eAAerB,aAAa,CACxB;AACI,GAACC,UAAD,GAAe,CAACwB,KAAD,EAAOC,MAAP,KACX5B,OAAO,CAAC2B,KAAD,EAAQE,KAAD,IAAU;AACpBA,IAAAA,KAAK,CAACvB,MAAN,GAAcsB,MAAM,CAACE,OAAP,CAAexB,MAA7B;AACH,GAFM,CAFf;AAKI,GAACF,gBAAD,GAAqB,CAACuB,KAAD,EAAOC,MAAP,KACjB5B,OAAO,CAAC2B,KAAD,EAAQE,KAAD,IAAU;AACpBA,IAAAA,KAAK,CAACvB,MAAN,GAAcsB,MAAM,CAACE,OAAP,CAAexB,MAA7B;AACN,GAFS;AANf,CADwB,EAWjBG,YAXiB,CAA5B;AAaA,OAAO,MAAMsB,cAAc,GAAG;AAC1BrB,EAAAA,WAD0B;AAE1Bc,EAAAA;AAF0B,CAAvB","sourcesContent":["\nimport axios from \"axios\";\nimport { produce } from \"immer\";\nimport { createAction, handleActions } from \"redux-actions\";\nconst GET_MONDAY = \"GET_MONDAY\";\nconst EDIT_MONDAYCHECK=\"EDIT_MONDAYCHECK\"\n\nconst getMonday = createAction(GET_MONDAY, (monday)=>({monday}))\nconst editMondayCheck = createAction(EDIT_MONDAYCHECK,(mondayCheck)=>({mondayCheck}))\n\nconst initialState = {\n    monday: [],\n    mondayCheck: [],\n}\n\nconst getMondayMD = () => {\n    return (function (dispatch, getState, {history})\n    {\n        axios({\n            method:'GET',\n            url: \"http://localhost:4000/Monday\",\n            data: {},\n           \n        })\n        .then((res)=>{\n            const dateList = res.data\n            console.log(dateList)\n            dispatch(getMonday(dateList))\n           \n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n    )\n}\nconst editMondayCheckMD = (postId,check) => {\n    return (function (dispatch, getState, {history})\n    {\n        axios({\n            method:'PUT',\n            url: `http://localhost:4000/Monday/${postId}`,\n            data: {\n                check\n            },\n           \n        })\n        .then((res)=>{\n            const dateList = res.data\n            console.log(dateList)\n            dispatch(getMonday(dateList))\n           \n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n    )\n}\n\nexport default handleActions (\n    {\n        [GET_MONDAY] : (state,action) => \n            produce(state,(draft)=> {\n                draft.monday =action.payload.monday;\n            }),\n        [EDIT_MONDAYCHECK] : (state,action) => \n            produce(state,(draft)=> {\n                draft.monday =action.payload.monday;\n         })\n        \n        }, initialState);\n\nexport const actionCreators = {\n    getMondayMD,\n    editMondayCheckMD,\n}"]},"metadata":{},"sourceType":"module"}
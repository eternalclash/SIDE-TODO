{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\nimport date from \"./module/date\";\nexport const history = createBrowserHistory();\nconst rootReducer = combineReducers({\n  date: date,\n  router: connectRouter(history)\n});\nconst middlewares = [thunk.withExtraArgument({\n  history: history\n})];\nconst env = process.env.NODE_ENV;\n\nif (env === \"development\") {\n  const {\n    logger\n  } = require(\"redux-logger\");\n\n  middlewares.push(logger);\n}\n\nconst composeEnhancers = typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = initialStore => createStore(rootReducer, enhancer);\n\nexport default store();","map":{"version":3,"sources":["/Users/eternalclash/Desktop/TODOLIST/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createBrowserHistory","connectRouter","date","history","rootReducer","router","middlewares","withExtraArgument","env","process","NODE_ENV","logger","require","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","initialStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,OAAO,MAAMC,OAAO,GAAGH,oBAAoB,EAApC;AAEP,MAAMI,WAAW,GAAGR,eAAe,CAAC;AAChCM,EAAAA,IAAI,EAAEA,IAD0B;AAEhCG,EAAAA,MAAM,EAAEJ,aAAa,CAACE,OAAD;AAFW,CAAD,CAAnC;AAKA,MAAMG,WAAW,GAAG,CAACP,KAAK,CAACQ,iBAAN,CAAwB;AAAEJ,EAAAA,OAAO,EAAEA;AAAX,CAAxB,CAAD,CAApB;AAEA,MAAMK,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB;;AAEA,IAAIF,GAAG,KAAK,aAAZ,EAA2B;AACvB,QAAM;AAAEG,IAAAA;AAAF,MAAaC,OAAO,CAAC,cAAD,CAA1B;;AACAN,EAAAA,WAAW,CAACO,IAAZ,CAAiBF,MAAjB;AACH;;AAED,MAAMG,gBAAgB,GAClB,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,oCAArC,GACMD,MAAM,CAACC,oCAAP,CAA4C,CACxC;AADwC,CAA5C,CADN,GAIMlB,OALV;AAOA,MAAMmB,QAAQ,GAAGH,gBAAgB,CAACjB,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CAAjC;;AAEA,IAAIY,KAAK,GAAIC,YAAD,IAAkBxB,WAAW,CAACS,WAAD,EAAca,QAAd,CAAzC;;AAEA,eAAeC,KAAK,EAApB","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\nimport date from \"./module/date\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n    date: date,\n    router: connectRouter(history),\n});\n\nconst middlewares = [thunk.withExtraArgument({ history: history })];\n\nconst env = process.env.NODE_ENV;\n\nif (env === \"development\") {\n    const { logger } = require(\"redux-logger\");\n    middlewares.push(logger);\n}\n\nconst composeEnhancers =\n    typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n              // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n          })\n        : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = (initialStore) => createStore(rootReducer, enhancer);\n\nexport default store();"]},"metadata":{},"sourceType":"module"}